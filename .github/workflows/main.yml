# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master #workflow triggered by push and pull requests to the main branch

name: R-CMD-check #name of the workflow

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }} 

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) #

    strategy:
      fail-fast: false # allows the test to continue running even though it fails in one OS
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'} #test is done on windows and macOS environment and on the latest versions

    env: #config environment
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true # will not cause warning messages during calls to install packages to become errors
      _R_CHECK_FORCE_SUGGESTS_: false #prevents installation of suggested dependencies
      RSPM: ${{ matrix.config.rspm }} #not sure if needed?
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2 #checks out code on job environment so we can use it to run tests

      - uses: r-lib/actions/setup-r@v1 #set up r environment for specified versions in the matrix
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1 #not sure if needed

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version") #not sure if needed
        shell: Rscript {0} 

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1- #not sire if needed

      - name: Install system dependencies # not sure if needed
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))') 

      - name: Install dependencies #install rcmdcheck
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check #displays erorr and warning messages
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results #shows error and warning messages
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
